{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemal\\\\Pictures\\\\01-food-starting-project\\\\src\\\\components\\\\Cart\\\\checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setformInputsValidity] = useState({});\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = e => {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isFiveChars(enteredPostalCode);\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"yr5sSP+C5LWVB+Z8TE2ncJqh8kk=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/hemal/Pictures/01-food-starting-project/src/components/Cart/checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setformInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","e","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","form","control","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef,useState } from 'react';\r\nimport classes from './checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChars = value => value.trim().length ===5;\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const [formInputsValidity , setformInputsValidity] = useState({\r\n      \r\n    });\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const confirmHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredStreet = streetInputRef.current.value;\r\n        const enteredPostalCode = postalCodeInputRef.current.value;\r\n        const enteredCity = cityInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n        const enteredPostalCodeIsValid = !isFiveChars(enteredPostalCode);\r\n\r\n        const formIsValid = \r\n            enteredNameIsValid &&\r\n            enteredStreetIsValid &&\r\n            enteredCityIsValid &&\r\n            enteredPostalCodeIsValid;\r\n\r\n        if(!formIsValid){\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit = {confirmHandler}>\r\n            <div className={classes.control}>\r\n                <label htmlFor = 'name'>Your Name</label>\r\n                <input type='text' id='name' ref={nameInputRef} />\r\n            </div>\r\n            <div className={classes.control}>\r\n                <label htmlFor = 'street'>Street</label>\r\n                <input type='text' id='street' ref={streetInputRef} />\r\n            </div>\r\n            <div className={classes.control}>\r\n                <label htmlFor = 'postal'>Postal Code</label>\r\n                <input type='text' id='postal' ref={postalCodeInputRef} />\r\n            </div>\r\n            <div className={classes.control}>\r\n                <label htmlFor = 'city'>City</label>\r\n                <input type='text' id='city' ref={cityInputRef} />\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button type = 'button' onClick = {props.onCancel}>Cancel</button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}